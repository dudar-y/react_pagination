{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagination","Math","ceil","className","cn","disabled","onClick","href","map","item","active","length","newPage","items","App","start","end","useState","page","setPage","setPerPage","startCount","endCount","visibleItems","slice","onChange","event","target","value","id","defaultValue","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAaX,EAAW,EADZY,KAAKC,KAAKN,EAAQC,IAmBpC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBP,IAA3C,SACE,mBACEQ,QApBS,WAKfP,EAJgC,IAAhBD,EACZA,EACAA,EAAc,IAkBZ,UAAQ,WACRK,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBT,IAAqB,EALtC,oBAUDE,EAAWQ,KAAI,SAACC,GAAD,OACd,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQZ,IAAgBW,IAFvD,SAIE,mBACEH,QAAS,WACHG,IAASX,GACXC,EAAaU,IAGjB,UAAQ,WACRN,UAAU,YACVI,KAAI,WAAME,GARZ,mBAUMA,MAbDA,MAiBT,oBAAIN,UACFC,IAAG,YAAa,CAAEC,SAAUP,IAAgBE,EAAWW,SADzD,SAIE,mBACEL,QA7CS,WACf,IAAMM,EAAUd,IAAgBE,EAAWW,OACvCb,EACAA,EAAc,EAElBC,EAAaa,IAyCP,UAAQ,WACRT,UAAU,YACVI,KAAK,QACL,gBAAeT,IAAgBE,EAAWW,SAAU,EALtD,wBChEFE,EAAQxB,EAAW,EAHC,IAIvBmB,KAAI,SAAAf,GAAC,qBAAYA,MAUb,IAAMqB,EAAgB,WAC3B,IAPAC,EACAC,EAMA,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBuB,EAAhB,KACMC,GAAeH,EAAO,GAAKrB,EAE3ByB,EAAWD,EAAaxB,EAnBN,MAqBpBwB,EAAaxB,EAEX0B,GAfNR,EAe4CM,EAd5CL,EAcwDM,EAAnBT,EAZjBW,MAAMT,EAAOC,IAcjC,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWe,EADX,mBAC0BG,EAAa,EADvC,cAC8CC,EAD9C,eA7BoB,GA6BpB,OAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEsB,SAAU,SAACC,IACJA,EAAMC,OAAOC,QAAU/B,IAC1BuB,GAAYM,EAAMC,OAAOC,OACzBT,EAAQ,KAGZ,UAAQ,kBACRU,GAAG,kBACH1B,UAAU,eACV2B,aAAcjC,EAVhB,UAYE,wBAAQ+B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEP,MA3DkB,GA4DlBC,QAASA,EACTC,YAAaoB,EACbnB,aAAcoB,IAEhB,6BACGI,EAAaf,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCrEnBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f457b150.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pagination = getNumbers(1, pageCount);\n\n  const prevPage = () => {\n    const newPage = currentPage === 1\n      ? currentPage\n      : currentPage - 1;\n\n    onPageChange(newPage);\n  };\n\n  const nextPage = () => {\n    const newPage = currentPage === pagination.length\n      ? currentPage\n      : currentPage + 1;\n\n    onPageChange(newPage);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          onClick={prevPage}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 && true}\n        >\n          «\n        </a>\n      </li>\n      {pagination.map((item) => (\n        <li\n          key={item}\n          className={cn('page-item', { active: currentPage === item })}\n        >\n          <a\n            onClick={() => {\n              if (item !== currentPage) {\n                onPageChange(item);\n              }\n            }}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n          >\n            {`${item}`}\n          </a>\n        </li>\n      ))}\n      <li className={\n        cn('page-item', { disabled: currentPage === pagination.length })\n      }\n      >\n        <a\n          onClick={nextPage}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagination.length && true}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst TOTAL_ITEMS_COUNT = 42;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, TOTAL_ITEMS_COUNT)\n  .map(n => `Item ${n}`);\n\nfunction getVisibleItems(\n  currentItems: string[],\n  start: number,\n  end: number,\n): string[] {\n  return currentItems.slice(start, end);\n}\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const startCount = ((page - 1) * perPage);\n\n  const endCount = startCount + perPage > TOTAL_ITEMS_COUNT\n    ? TOTAL_ITEMS_COUNT\n    : startCount + perPage;\n\n  const visibleItems = getVisibleItems(items, startCount, endCount);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startCount + 1} - ${endCount} of ${TOTAL_ITEMS_COUNT})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n              if (+event.target.value !== perPage) {\n                setPerPage(+event.target.value);\n                setPage(1);\n              }\n            }}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={TOTAL_ITEMS_COUNT}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}